00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.14.01
Created On: 5/22/2014 2:32:46 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7      
00000000  =00007000                  8  stack       EQU     $7000                   *Stack address
00000000  =00005000                  9  buffer      EQU     $5000                   *Buffer address
00000000  =0000DE61                 10  example     EQU     %1101111001100001       *madeup
00000000  =00004E71                 11  nop         EQU     %0100111001110001       *NOP
00000000  =00001001                 12  moveb       EQU     %0001000000000001       *MOVE.B
00000000  =0000000C                 13  shift       EQU     12                      *Shift 12 bits
00000000                            14  buf         DS.B    80
00000050                            15  
00000050  =0000000D                 16  CR      EQU     $0D                         ASCII code for Carriage Return
00000050  =0000000A                 17  LF      EQU     $0A                         ASCII code for Line Feed
00000050= 44 0D 0A 00               18  MESSAGE DC.B    'D',CR,LF,0                   ASCII string with new line
00000054= 50 72 6F 67 72 61 ...     19  BYE     DC.B    'Program terminated!',CR,LF,0 
0000006A                            20  
0000006A                            21  
00001000                            22      ORG    $1000
00001000                            23  START:                  ; first instruction of program
00001000                            24  
00001000                            25  * Put program code here
00001000                            26  * Word Data in D0
00001000                            27  
00001000  4FF8 7000                 28      LEA     stack,SP                        *Load the SP
00001004  4DF8 5000                 29      LEA     buffer,A6                       *Load buffer address
00001008  41F9 0000105A             30      LEA     jmp_table,A0                    *Index into the table
0000100E  4280                      31      CLR.L   D0                              *Zero it
00001010  303C 1001                 32      MOVE.W  #moveb,D0                       *Move byte
00001014  3200                      33      MOVE.W  D0,D1                           *Copy Word data to D1
00001016  48E7 8000                 34      MOVEM.L D0,-(SP)                        *Copy Word data to the stack
0000101A                            35      
0000101A  0241 0007                 36      ANDI.W  #%0000000000000111,D1           *Get last 3 bits Source REG
0000101E  1401                      37      MOVE.B  D1,D2                           *Store in D2
00001020                            38      
00001020  E658                      39      ROR.W   #3,D0                           *Rotate D0 right 3 bits
00001022  3200                      40      MOVE.W  D0,D1                           *Copy Word to D1
00001024  0241 0007                 41      ANDI.W  #%0000000000000111,D1           *Get last 3 bits Source MODE
00001028  1601                      42      MOVE.B  D1,D3                           *Store in D3
0000102A                            43      
0000102A  E658                      44      ROR.W   #3,D0                           *Rotate D0 right 3 bits
0000102C  3200                      45      MOVE.W  D0,D1                           *Copy Word to D1
0000102E  0241 0007                 46      ANDI.W  #%0000000000000111,D1           *Get last 3 bits Dest MODE
00001032  1801                      47      MOVE.B  D1,D4                           *Store in D4
00001034                            48      
00001034  E658                      49      ROR.W   #3,D0                           *Rotate D0 right 3 bits
00001036  3200                      50      MOVE.W  D0,D1                           *Copy Word to D1
00001038  0241 0007                 51      ANDI.W  #%0000000000000111,D1           *Get last 3 bits Dest REG
0000103C  1A01                      52      MOVE.B  D1,D5                           *Store in D5
0000103E                            53      
0000103E  4CDF 0001                 54      MOVEM.L (SP)+,D0                        *Pop Word data from stack to D0
00001042  4281                      55      CLR.L   D1                              *Clear D1
00001044                            56  
00001044  123C 000C                 57      MOVE.B  #shift,D1                       *Shift 12 bits to the right 
00001048  E268                      58      LSR.W   D1,D0                           *Move the bits
0000104A                            59      
0000104A  4281                      60      CLR.L   D1                              *Clear D1
0000104C  1200                      61      MOVE.B  D0,D1                           *Copy 4 bits to D1
0000104E                            62      
0000104E  C0FC 0006                 63      MULU    #6,D0                           *Form offset
00001052  4EB0 0000                 64      JSR     0(A0,D0)                        *Jump indirect with index
00001056  6000 0260                 65      BRA     Done
0000105A                            66      
0000105A                            67  jmp_table
0000105A  4EF9 000010BA             68      JMP     code0000                        *Bit manipulation/MOVEP/Immediate
00001060  4EF9 000010BE             69      JMP     code0001                        *Move Byte
00001066  4EF9 00001280             70      JMP     code0010                        *Move Long
0000106C  4EF9 00001284             71      JMP     code0011                        *Move Word
00001072  4EF9 00001288             72      JMP     code0100                        *Miscellaneous
00001078  4EF9 0000128C             73      JMP     code0101                        *ADDQ/SUBQ/Scc/DBcc
0000107E  4EF9 00001290             74      JMP     code0110                        *BSR,BRA,Bcc
00001084  4EF9 00001294             75      JMP     code0111                        *MOVEQ
0000108A  4EF9 00001298             76      JMP     code1000                        *OR/DIV/SBCD
00001090  4EF9 0000129C             77      JMP     code1001                        *SUB/SUBX
00001096  4EF9 000012A0             78      JMP     code1010                        *Unassigned
0000109C  4EF9 000012A4             79      JMP     code1011                        *CMP/EOR
000010A2  4EF9 000012A8             80      JMP     code1100                        *AND/MUL/ABCD/EXG
000010A8  4EF9 000012AC             81      JMP     code1101                        *ADD/ADDA/ADDX
000010AE  4EF9 000012B0             82      JMP     code1110                        *Shift/Rotate
000010B4  4EF9 000012B4             83      JMP     code1111                        *Special/Reserved
000010BA                            84      
000010BA                            85  EA_table
000010BA                            86      *JMP     code000
000010BA                            87      
000010BA                            88      
000010BA  4E72 2700                 89  code0000    STOP    #$2700
000010BE                            90  code0001
000010BE  12FC 004D                 91      MOVE.B  #'M',(A1)+
000010C2  12FC 004F                 92      MOVE.B  #'O',(A1)+
000010C6  12FC 0056                 93      MOVE.B  #'V',(A1)+
000010CA  12FC 0045                 94      MOVE.B  #'E',(A1)+
000010CE  12FC 002E                 95      MOVE.B  #'.',(A1)+
000010D2  12FC 0042                 96      MOVE.B  #'B',(A1)+
000010D6  12FC 0020                 97      MOVE.B  #' ',(A1)+
000010DA  12FC 0020                 98      MOVE.B  #' ',(A1)+
000010DE  12FC 0020                 99      MOVE.B  #' ',(A1)+
000010E2  12FC 0020                100      MOVE.B  #' ',(A1)+    
000010E6                           101      *MOVE.B  #$00,(A1)                  *Terminator
000010E6                           102      
000010E6                           103  
000010E6                           104  
000010E6  4280                     105      CLR.L   D0                          *Clear D0 for counter of EA loop
000010E8                           106  
000010E8                           107  EAMode
000010E8                           108      *Compare EAmode 0-7 and branch accordingly
000010E8  B63C 0000                109      CMP.B   #0,D3
000010EC  6700 0044                110      BEQ     EAmode0
000010F0  B63C 0001                111      CMP.B   #1,D3
000010F4  6700 0064                112      BEQ     EAmode1
000010F8  B63C 0002                113      CMP.B   #2,D3
000010FC  6700 0070                114      BEQ     EAmode2
00001100  B63C 0003                115      CMP.B   #3,D3
00001104  6700 0084                116      BEQ     EAmode3
00001108  B63C 0004                117      CMP.B   #4,D3
0000110C  6700 009E                118      BEQ     EAmode4
00001110  B63C 0005                119      CMP.B   #5,D3
00001114  6700 00BA                120      BEQ     EAmode5
00001118  B63C 0006                121      CMP.B   #6,D3
0000111C  6700 00FC                122      BEQ     EAmode6
00001120  B63C 0007                123      CMP.B   #7,D3
00001124  6700 013E                124      BEQ     EAmode7
00001128                           125  
00001128                           126  *EA, EA set up    
00001128                           127  EApart2
00001128  1604                     128      MOVE.B  D4,D3                           *Move Dest MODE to D3
0000112A  1405                     129      MOVE.B  D5,D2                           *Move Dest REG to D2
0000112C  12FC 002C                130      MOVE.B  #',',(A1)+
00001130                           131       
00001130  60B6                     132      BRA     EAMode                          *Branch to EAMode      
00001132                           133      
00001132                           134      
00001132                           135      
00001132                           136  EAmode0
00001132  12FC 0044                137      MOVE.B  #'D',(A1)+                  
00001136  0642 0030                138      ADD     #$30,D2                         *Convert REG# to ASCII
0000113A  12C2                     139      MOVE.B  D2,(A1)+                        *Add to buffer
0000113C                           140  
0000113C  5240                     141      ADD     #1,D0                           *Increase EA loop counter
0000113E                           142      
0000113E  B03C 0002                143      CMP.B   #2,D0                           *EA done twice?
00001142  6700 0004                144      BEQ     Print                           *Print
00001146                           145      
00001146  60E0                     146      BRA     EApart2                         *EA done once, go to second EA
00001148                           147      
00001148                           148  Print    
00001148  12BC 0000                149      MOVE.B  #$00,(A1)                       *Add Terminator
0000114C  43F8 0000                150      LEA     buf,A1                          *Load buffer into A1
00001150  4280                     151      CLR.L   D0                              *Clear D0
00001152  103C 000D                152      MOVE.B  #13,D0                          *Trap task 13
00001156  4E4F                     153      TRAP    #15                             *Call Trap 15
00001158                           154      
00001158  4E75                     155      RTS
0000115A                           156      *BRA     Done
0000115A                           157      
0000115A                           158  EAmode1
0000115A  12FC 0041                159      MOVE.B  #'A',(A1)+                  
0000115E  0642 0030                160      ADD     #$30,D2                         *Convert REG# to ASCII
00001162  12C2                     161      MOVE.B  D2,(A1)+                        *Add to buffer
00001164                           162  
00001164  5240                     163      ADD     #1,D0                           *Increase EA loop counter
00001166                           164      
00001166  B03C 0002                165      CMP.B   #2,D0                           *EA done twice?
0000116A  67DC                     166      BEQ     Print                           *Print
0000116C                           167      
0000116C  60BA                     168      BRA     EApart2                         *EA done once, go to second EA
0000116E                           169  
0000116E                           170  EAmode2
0000116E  12FC 0028                171      MOVE.B  #'(',(A1)+
00001172  12FC 0041                172      MOVE.B  #'A',(A1)+                  
00001176  0642 0030                173      ADD     #$30,D2                         *Convert REG# to ASCII
0000117A  12C2                     174      MOVE.B  D2,(A1)+                        *Add to buffer
0000117C  12FC 0029                175      MOVE.B  #')',(A1)+
00001180                           176  
00001180  5240                     177      ADD     #1,D0                           *Increase EA loop counter
00001182                           178      
00001182  B03C 0002                179      CMP.B   #2,D0                           *EA done twice?
00001186  67C0                     180      BEQ     Print                           *Print
00001188                           181      
00001188  609E                     182      BRA     EApart2                         *EA done once, go to second EA
0000118A                           183  
0000118A                           184  EAmode3
0000118A  12FC 0028                185      MOVE.B  #'(',(A1)+
0000118E  12FC 0041                186      MOVE.B  #'A',(A1)+                  
00001192  0642 0030                187      ADD     #$30,D2                         *Convert REG# to ASCII
00001196  12C2                     188      MOVE.B  D2,(A1)+                        *Add to buffer
00001198  12FC 0029                189      MOVE.B  #')',(A1)+
0000119C  12FC 002B                190      MOVE.B  #'+',(A1)+
000011A0                           191  
000011A0  5240                     192      ADD     #1,D0                           *Increase EA loop counter
000011A2                           193      
000011A2  B03C 0002                194      CMP.B   #2,D0                           *EA done twice?
000011A6  67A0                     195      BEQ     Print                           *Print
000011A8                           196      
000011A8  6000 FF7E                197      BRA     EApart2                         *EA done once, go to second EA
000011AC                           198  
000011AC                           199  EAmode4
000011AC  12FC 002D                200      MOVE.B  #'-',(A1)+
000011B0  12FC 0028                201      MOVE.B  #'(',(A1)+
000011B4  12FC 0041                202      MOVE.B  #'A',(A1)+                  
000011B8  0642 0030                203      ADD     #$30,D2                         *Convert REG# to ASCII
000011BC  12C2                     204      MOVE.B  D2,(A1)+                        *Add to buffer
000011BE  12FC 0029                205      MOVE.B  #')',(A1)+
000011C2                           206  
000011C2  5240                     207      ADD     #1,D0                           *Increase EA loop counter
000011C4                           208      
000011C4  B03C 0002                209      CMP.B   #2,D0                           *EA done twice?
000011C8  6700 FF7E                210      BEQ     Print                           *Print
000011CC                           211      
000011CC  6000 FF5A                212      BRA     EApart2                         *EA done once, go to second EA
000011D0                           213  
000011D0                           214  EAmode5
000011D0  12FC 0049                215      MOVE.B  #'I',(A1)+
000011D4  12FC 004E                216      MOVE.B  #'N',(A1)+
000011D8  12FC 0056                217      MOVE.B  #'V',(A1)+
000011DC  12FC 0041                218      MOVE.B  #'A',(A1)+
000011E0  12FC 004C                219      MOVE.B  #'L',(A1)+
000011E4  12FC 0049                220      MOVE.B  #'I',(A1)+
000011E8  12FC 0044                221      MOVE.B  #'D',(A1)+
000011EC  12FC 0020                222      MOVE.B  #' ',(A1)+
000011F0  12FC 0045                223      MOVE.B  #'E',(A1)+
000011F4  12FC 0041                224      MOVE.B  #'A',(A1)+
000011F8  12FC 0020                225      MOVE.B  #' ',(A1)+
000011FC  12FC 004D                226      MOVE.B  #'M',(A1)+
00001200  12FC 004F                227      MOVE.B  #'O',(A1)+
00001204  12FC 0044                228      MOVE.B  #'D',(A1)+
00001208  12FC 0045                229      MOVE.B  #'E',(A1)+
0000120C                           230  
0000120C  5240                     231      ADD     #1,D0                           *Increase EA loop counter
0000120E                           232      
0000120E  B03C 0002                233      CMP.B   #2,D0                           *EA done twice?
00001212  6700 FF34                234      BEQ     Print                           *Print
00001216                           235      
00001216  6000 FF10                236      BRA     EApart2                         *EA done once, go to second EA    
0000121A                           237   
0000121A                           238  EAmode6
0000121A  12FC 0049                239      MOVE.B  #'I',(A1)+
0000121E  12FC 004E                240      MOVE.B  #'N',(A1)+
00001222  12FC 0056                241      MOVE.B  #'V',(A1)+
00001226  12FC 0041                242      MOVE.B  #'A',(A1)+
0000122A  12FC 004C                243      MOVE.B  #'L',(A1)+
0000122E  12FC 0049                244      MOVE.B  #'I',(A1)+
00001232  12FC 0044                245      MOVE.B  #'D',(A1)+
00001236  12FC 0020                246      MOVE.B  #' ',(A1)+
0000123A  12FC 0045                247      MOVE.B  #'E',(A1)+
0000123E  12FC 0041                248      MOVE.B  #'A',(A1)+
00001242  12FC 0020                249      MOVE.B  #' ',(A1)+
00001246  12FC 004D                250      MOVE.B  #'M',(A1)+
0000124A  12FC 004F                251      MOVE.B  #'O',(A1)+
0000124E  12FC 0044                252      MOVE.B  #'D',(A1)+
00001252  12FC 0045                253      MOVE.B  #'E',(A1)+
00001256                           254  
00001256  5240                     255      ADD     #1,D0                           *Increase EA loop counter
00001258                           256      
00001258  B03C 0002                257      CMP.B   #2,D0                           *EA done twice?
0000125C  6700 FEEA                258      BEQ     Print                           *Print
00001260                           259      
00001260  6000 FEC6                260      BRA     EApart2                         *EA done once, go to second EA 
00001264                           261  
00001264                           262  EAmode7
00001264  B43C 0000                263      CMP.B   #0,D2                           *WORD addressing mode
00001268  6000 0012                264      BRA     ABSOLUTE_WORD
0000126C                           265      
0000126C  B43C 0001                266      CMP.B   #1,D2                           *LONG WORD addressing mode        
00001270  6000 000A                267      BRA     ABSOlUTE_LONG                   
00001274                           268      
00001274  B43C 0004                269      CMP.B   #4,D2                           *IMMEDIATE DATA addressing mode
00001278  6000 0002                270      BRA     IMMEDIATE_DATA
0000127C                           271  
0000127C                           272  ABSOLUTE_WORD
0000127C                           273  
0000127C                           274      
0000127C                           275  ABSOLUTE_LONG
0000127C                           276  
0000127C                           277  IMMEDIATE_DATA
0000127C  0241 0003                278      ANDI.W  #%0000000000000011,D1           *Get last 2 bits for size
00001280                           279  
00001280                           280  
00001280  4E72 2700                281  code0010    STOP    #$2700
00001284  4E72 2700                282  code0011    STOP    #$2700
00001288  4E72 2700                283  code0100    STOP    #$2700
0000128C  4E72 2700                284  code0101    STOP    #$2700
00001290  4E72 2700                285  code0110    STOP    #$2700
00001294  4E72 2700                286  code0111    STOP    #$2700
00001298  4E72 2700                287  code1000    STOP    #$2700
0000129C  4E72 2700                288  code1001    STOP    #$2700
000012A0  4E72 2700                289  code1010    STOP    #$2700
000012A4  4E72 2700                290  code1011    STOP    #$2700
000012A8  4E72 2700                291  code1100    STOP    #$2700
000012AC  4E72 2700                292  code1101    STOP    #$2700
000012B0  4E72 2700                293  code1110    STOP    #$2700
000012B4  4E72 2700                294  code1111    STOP    #$2700
000012B8                           295      
000012B8                           296  Done
000012B8  43F8 0054                297      LEA     BYE, A1                         *Load BYE into address register A1
000012BC  103C 000E                298      MOVE.B  #14, D0                         *Moves the number 14 into data register D0
000012C0  4E4F                     299      TRAP    #15                             *Displays Message
000012C2                           300  
000012C2  FFFF FFFF                301      SIMHALT                                 *halt simulator
000012C6                           302  
000012C6                           303  * Put variables and constants here
000012C6                           304  
000012C6                           305  
000012C6                           306  
000012C6                           307  
000012C6                           308      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       127C
ABSOLUTE_WORD       127C
BUF                 0
BUFFER              5000
BYE                 54
CODE0000            10BA
CODE0001            10BE
CODE0010            1280
CODE0011            1284
CODE0100            1288
CODE0101            128C
CODE0110            1290
CODE0111            1294
CODE1000            1298
CODE1001            129C
CODE1010            12A0
CODE1011            12A4
CODE1100            12A8
CODE1101            12AC
CODE1110            12B0
CODE1111            12B4
CR                  D
DONE                12B8
EAMODE              10E8
EAMODE0             1132
EAMODE1             115A
EAMODE2             116E
EAMODE3             118A
EAMODE4             11AC
EAMODE5             11D0
EAMODE6             121A
EAMODE7             1264
EAPART2             1128
EA_TABLE            10BA
EXAMPLE             DE61
IMMEDIATE_DATA      127C
JMP_TABLE           105A
LF                  A
MESSAGE             50
MOVEB               1001
NOP                 4E71
PRINT               1148
SHIFT               C
STACK               7000
START               1000
